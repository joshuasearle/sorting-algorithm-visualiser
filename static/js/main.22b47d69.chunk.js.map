{"version":3,"sources":["components/Menubar/Menubar.module.css","components/inputs/Input.module.css","components/inputs/FormLabel/FormLabel.module.css","components/inputs/Button/Button.module.css","components/Columns/Column/Column.module.css","components/Columns/Columns.module.css","components/inputs/DropdownMenu/DropdownMenu.js","components/inputs/FormLabel/FormLabel.js","sorting-algs/sort-util.js","sorting-algs/quick-sort.js","sorting-algs/merge-sort.js","sorting-algs/heap-sort.js","sorting-algs/sorting-main.js","sorting-algs/selection-sort.js","sorting-algs/insertion-sort.js","sorting-algs/bubble-sort.js","sorting-algs/shaker-sort.js","store/actionCreators.js","store/actionTypes.js","components/Menubar/AlgorithmPicker/AlgorithmPicker.js","components/inputs/NumberInput/NumberInput.js","components/Menubar/ElementCountPicker/ElementCountPicker.js","components/inputs/Button/Button.js","components/Menubar/RunButton/RunButton.js","components/inputs/Slider/Slider.js","components/Menubar/SpeedPicker/SpeedPicker.js","components/Menubar/StopButton/StopButton.js","components/Menubar/RandomiseList/RandomiseList.js","components/Menubar/Menubar.js","components/Columns/Column/Column.js","components/Columns/Columns.js","App.js","store/objectCombiner.js","store/reducer.js","index.js"],"names":["module","exports","DropdownMenu","options","value","onChange","disabled","dropDownOptions","map","option","key","className","classes","Input","FormLabel","children","instantAllColor","length","color","visId","actionCreators","getIdxColorArray","gradualAllColor","idxColor","getSingleHighlightAction","gradualAllColorReverse","reverse","Array","from","_","idx","quickSortAux","arr","animations","lo","hi","pivIdx","push","sortUtil","lastElSmallerThanPivot","pivot","j","swap","highlights","tmp","partition","mergeSortAux","lIdx","rIdx","mid","Math","floor","initMid","lStart","rStart","console","log","merge","heapify","rootIdx","largestElIdx","leftChildIdx","rightChildIdx","sortingAlgs","result","i","minIdx","highlighted","swapped","start","end","n","concat","generateList","type","stopVisualisation","recursiveTimeout","dispatch","getState","actions","actionIdx","setTimeout","currentVisId","speedToInterval","speed","animateElements","shift","AlgorithmPicker","useSelector","state","algorithm","visualising","useDispatch","Object","keys","event","target","NumberInput","ElementCountPicker","currentList","elementCount","Button","onClick","RunButton","alg","nextVisId","Slider","min","max","interval","StopButton","RandomList","Menubar","button","Title","RandomiseList","SpeedPicker","Column","width","left","styles","backgroundColor","height","style","Columns","useState","window","innerWidth","windowWidth","setWindowWidth","useEffect","windowResizeHandler","addEventListener","removeEventListener","elementWidth","gapWidth","residual","columns","column","index","App","objectCombiner","changedObject","randomListGenerator","random","initialState","setAlgorithm","action","newListLength","newList","setSpeed","startVisualisation","undefined","item","forEach","idx1","idx2","currentIdx","destIdx","slice","reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,gBAAkB,iCAAiC,mBAAqB,oCAAoC,UAAY,6B,oBCA5MD,EAAOC,QAAU,CAAC,MAAQ,uB,sBCA1BD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,0OCmBbC,EAhBM,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC1CC,EAAkBJ,EAAQK,KAAI,SAACC,GAAD,OAClC,4BAAQC,IAAKD,GAASA,MAExB,OACE,4BACEH,SAAUA,EACVF,MAAOA,EACPO,UAAWC,IAAQC,MACnBR,SAAUA,GAETE,I,iBCPQO,EAJG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,2BAAOJ,UAAWC,IAAQE,WAAYC,I,OCHlCC,EAAkB,SAACC,EAAQC,EAAOC,GAE7C,OAAOC,EACLD,EACAE,EAAiBJ,EAAQC,GACzB,OAISI,EAAkB,SAACL,EAAQC,EAAOC,GAG7C,OAAOE,EAAiBJ,EAAQC,GAAOV,KAAI,SAACe,GAC1C,OAAOC,EAAyBD,EAAUJ,OAIjCM,EAAyB,SAACR,EAAQC,EAAOC,GACpD,OAAOE,EAAiBJ,EAAQC,GAC7BQ,UACAlB,KAAI,SAACe,GACJ,OAAOC,EAAyBD,EAAUJ,OAI1CE,EAAmB,SAACJ,EAAQC,GAEhC,OAAOS,MAAMC,KAAKD,MAAMV,IAAS,SAACY,EAAGC,GAAJ,MAAa,CAAEA,IAAKA,EAAKZ,MAAOA,OAGtDM,EAA2B,SAACD,EAAUJ,GACjD,OAAOC,EAA+BD,EAAO,CAACI,GAAW,OCQrDQ,EAAe,SAAfA,EAAgBC,EAAKb,EAAOc,EAAYC,EAAIC,GAChD,GAAID,EAAKC,EAAI,CAEX,IAAMC,EAzCQ,SAACJ,EAAKb,EAAOc,EAAYC,EAAIC,GAE7CF,EAAWI,KACTC,EAAkC,CAAER,IAAKK,EAAIjB,MAAO,SAAWC,IAIjE,IAFA,IAAIoB,EAAyBL,EAAK,EAC5BM,EAAQR,EAAIG,GACTM,EAAIP,EAAIO,EAAIN,EAAIM,IAAK,CAC5B,IAAIC,EAAO,KACPC,EAAa,GAEjB,GADAA,EAAWN,KAAK,CAAEP,IAAKW,EAAGvB,MAAO,UAC7Bc,EAAIS,GAAGrC,MAAQoC,EAAMpC,MAAO,CAC9BmC,GAA0B,EAE1B,IAAIK,EAAMZ,EAAIS,GACdT,EAAIS,GAAKT,EAAIO,GACbP,EAAIO,GAA0BK,EAC9BF,EAAO,CAACD,EAAGF,GAEbI,EAAWN,KAAK,CAAEP,IAAKW,EAAI,EAAGvB,MAAO,UACrCe,EAAWI,KAAKjB,EAA+BD,EAAOwB,EAAYD,IAIpE,IAAIE,EAAMZ,EAAIG,GAWd,OAVAH,EAAIG,GAAMH,EAAIO,EAAyB,GACvCP,EAAIO,EAAyB,GAAKK,EAClCX,EAAWI,KACTjB,EAA+BD,EAAO,KAAM,CAC1CgB,EACAI,EAAyB,KAKtBA,EAAyB,EAMfM,CAAUb,EAAKb,EAAOc,EAAYC,EAAIC,GAGrDJ,EAAaC,EAAKb,EAAOc,EAAYC,EAAIE,EAAS,GAClDL,EAAaC,EAAKb,EAAOc,EAAYG,EAAS,EAAGD,QACxCD,IAAOF,EAAIf,QACpBgB,EAAWI,KACTC,EAAkC,CAAER,IAAKI,EAAIhB,MAAO,SAAWC,KCU/D2B,EAAe,SAAfA,EAAgBd,EAAKe,EAAMC,EAAM7B,EAAOc,GAC5C,GAAIc,EAAOC,EAAM,CACf,IAAMC,EAAMC,KAAKC,MAAMJ,GAAQC,EAAOD,GAAQ,GAC9CD,EAAad,EAAKe,EAAME,EAAK9B,EAAOc,GACpCa,EAAad,EAAKiB,EAAM,EAAGD,EAAM7B,EAAOc,GA9D9B,SAACD,EAAKe,EAAME,EAAKD,EAAM7B,EAAOc,GAC1C,IAAImB,EAAUH,EAGVI,EAASN,EAGTO,EAASL,EAAM,EAGnB,KAAIjB,EAAIiB,GAAK7C,OAAS4B,EAAIsB,GAAQlD,OAIlC,KAAOiD,GAAUJ,GAAOK,GAAUN,GAAM,CACtCf,EAAWI,KACTjB,EAA+BD,EAAO,CACpC,CAAEW,IAAKuB,EAAQnC,MAAO,SACtB,CAAEY,IAAKwB,EAAQpC,MAAO,YAG1B,IAAIyB,EAAa,CACf,CAAEb,IAAKuB,EAAQnC,MAAO,SACtB,CAAEY,IAAKwB,EAAQpC,MAAO,UAQxB,GALa,IAAT6B,GAAcK,IAAYF,KAAKC,OAAOnB,EAAIf,OAAS,GAAK,KAC1DsC,QAAQC,IAAI,YACZb,EAAa,MAGXX,EAAIqB,GAAQjD,OAAS4B,EAAIsB,GAAQlD,MACnC6B,EAAWI,KAAKjB,EAA+BD,EAAOwB,IACtDU,QACK,CAEL,IADA,IAAIvB,EAAMwB,EACHxB,GAAOuB,EAAS,GAAG,OAIG,CAACrB,EAAIF,EAAM,GAAIE,EAAIF,IAA7CE,EAAIF,GAJmB,KAIbE,EAAIF,EAAM,GAJG,KAKxBA,IAGFG,EAAWI,KACTjB,EAA+BD,EAAOwB,EAAY,KAAM,CACtDW,EACAD,KAIJA,IACAJ,IACAK,MAUFG,CAAMzB,EAAKe,EAAME,EAAKD,EAAM7B,EAAOc,GAErC,OAAOD,GCjEH0B,EAAU,SAAVA,EAAW1B,EAAKf,EAAQ0C,EAASxC,EAAOc,GAE5C,IAAI2B,EAAeD,EAGbE,EAAe,EAAIF,EAAU,EAC7BG,EAAgB,EAAIH,EAAU,EAqBpC,GAjBEE,EAAe5C,GACfe,EAAI6B,GAAczD,MAAQ4B,EAAI4B,GAAcxD,QAE5CwD,EAAeC,GAKfC,EAAgB7C,GAChBe,EAAI8B,GAAe1D,MAAQ4B,EAAI4B,GAAcxD,QAE7CwD,EAAeE,GAMbF,IAAiBD,EAAS,CAAC,IAAD,EACQ,CAAC3B,EAAI4B,GAAe5B,EAAI2B,IAA3D3B,EAAI2B,GADuB,KACb3B,EAAI4B,GADS,KAE5B3B,EAAWI,KACTjB,EACED,EACA,CACE,CAAEW,IAAK6B,EAASzC,MAAO,SACvB,CAAEY,IAAK8B,EAAc1C,MAAO,UAE9B,CAACyC,EAASC,KAGd3B,EAAWI,KACTjB,EAA+BD,EAAO,CAAC,CAAEW,IAAK6B,EAASzC,MAAO,YAEhEwC,EAAQ1B,EAAKf,EAAQ2C,EAAczC,EAAOc,QAE1CA,EAAWI,KACTjB,EAA+BD,EAAO,CAAC,CAAEW,IAAK6B,EAASzC,MAAO,YAEhEe,EAAWI,KACTjB,EAA+BD,EAAO,CAAC,CAAEW,IAAK6B,EAASzC,MAAO,aCjCrD6C,EAVK,CAClB,iBCNoB,SAAC/B,EAAKb,GAC1B,IAAM6C,EAAM,YAAOhC,GACfC,EAAa,GACjBA,EAAWI,KAAKC,EAAyBN,EAAIf,OAAQ,QAASE,IAC9D,IAAK,IAAI8C,EAAI,EAAGA,EAAID,EAAO/C,OAAQgD,IAAK,CACtC,IAAIC,EAASD,EACbhC,EAAWI,KACTC,EAAkC,CAAER,IAAKmC,EAAG/C,MAAO,SAAWC,IAEhE,IAAK,IAAIsB,EAAIwB,EAAI,EAAGxB,EAAIuB,EAAO/C,OAAQwB,IAAK,CAC1C,IAAIE,EAAa,GACbF,EAAI,IAAMyB,GACZvB,EAAWN,KAAK,CAAEP,IAAKW,EAAI,EAAGvB,MAAO,UAEvCyB,EAAWN,KAAK,CAAEP,IAAKW,EAAGvB,MAAO,UAC7B8C,EAAOvB,GAAGrC,MAAQ4D,EAAOE,GAAQ9D,QAC/B8D,IAAWD,GACbtB,EAAWN,KAAK,CAAEP,IAAKoC,EAAQhD,MAAO,UAExCgD,EAASzB,EACTE,EAAWN,KAAK,CAAEP,IAAKoC,EAAQhD,MAAO,WAExCe,EAAWI,KAAKjB,EAA+BD,EAAOwB,EAAY,OAGpE,IAAIA,EAAa,GACbsB,IAAMjC,EAAIf,OAAS,GAAKiD,IAAWlC,EAAIf,QACzC0B,EAAWN,KAAK,CAAEP,IAAKE,EAAIf,OAAS,EAAGC,MAAO,UAE5CgD,IAAWD,IACbtB,EAAWN,KAAK,CAAEP,IAAKoC,EAAQhD,MAAO,UACtCyB,EAAWN,KAAK,CAAEP,IAAKmC,EAAG/C,MAAO,WAEnCe,EAAWI,KACTjB,EAA+BD,EAAOwB,EAAY,CAACsB,EAAGC,KA9BlB,MAgCR,CAACF,EAAOC,GAAID,EAAOE,IAAhDF,EAAOE,GAhC8B,KAgCrBF,EAAOC,GAhCc,KAuCxC,OAJAhC,EAAU,sBACLA,GADK,YAELK,EAAgCN,EAAIf,OAAQ,QAASE,MDlC1D,iBEPoB,SAACa,EAAKb,GAC1B,IAAIc,EAAa,GACjBA,EAAWI,KAAKC,EAAyBN,EAAIf,OAAQ,QAASE,IAE9D,IADA,IAAM6C,EAAM,YAAOhC,GACViC,EAAI,EAAGA,EAAIjC,EAAIf,OAAQgD,IAAK,CACnC,IAAIxB,EAAIwB,EAAI,EAYZ,IAXAhC,EAAWI,KACTjB,EACED,EACA,CACE,CAAEW,IAAKmC,EAAG/C,MAAO,SACjB,CAAEY,IAAKmC,EAAI,EAAG/C,MAAO,UAEvB,OAIGuB,GAAK,GAAKuB,EAAOvB,EAAI,GAAGrC,MAAQ4D,EAAOvB,GAAGrC,OAAO,CACtD,IAAIwC,EAAMoB,EAAOvB,GACjBuB,EAAOvB,GAAKuB,EAAOvB,EAAI,GACvBuB,EAAOvB,EAAI,GAAKG,EAChB,IAAID,EAAa,GACjBA,EAAWN,KAAK,CAAEP,IAAKW,EAAGvB,MAAO,UACjCyB,EAAWN,KAAK,CAAEP,IAAKW,EAAI,EAAGvB,MAAO,UACrCe,EAAWI,KACTjB,EAA+BD,EAAOwB,EAAY,CAACF,EAAGA,EAAI,KAE5DA,GAAK,EAEHA,IAAMwB,EAAI,EACZhC,EAAWI,KACTjB,EACED,EACA,CACE,CAAEW,IAAKmC,EAAG/C,MAAO,SACjB,CAAEY,IAAKmC,EAAI,EAAG/C,MAAO,UAEvB,QAIJe,EAAWI,KACTC,EAAkC,CAAER,IAAKW,EAAI,EAAGvB,MAAO,SAAWC,IAEpEc,EAAWI,KACTjB,EACED,EACA,CACE,CAAEW,IAAKW,EAAI,EAAGvB,MAAO,SACrB,CAAEY,IAAKW,EAAGvB,MAAO,UAEnB,QAUR,OALAe,EAAU,sBACLA,GADK,YAELK,EAAyBN,EAAIf,OAAQ,QAASE,IAFzC,YAGLmB,EAAgCN,EAAIf,OAAQ,QAASE,MFnD1D,cGRiB,SAACa,EAAKb,GACvB,IAAIc,EAAa,GACjBA,EAAWI,KAAKC,EAAyBN,EAAIf,OAAQ,QAASE,IAE9D,IADA,IAAM6C,EAAM,YAAOhC,GACViC,EAAI,EAAGA,EAAIjC,EAAIf,OAAS,EAAGgD,IAAK,CACvChC,EAAWI,KACTjB,EAA+BD,EAAO,CACpC,CAAEW,IAAK,EAAGZ,MAAO,SACjB,CAAEY,IAAK,EAAGZ,MAAO,YAGrB,IAAK,IAAIuB,EAAI,EAAGA,EAAIT,EAAIf,OAAS,EAAIgD,EAAGxB,IAAK,CAC3C,IAAI0B,EAAc,GACdC,EAAU,KAId,GAHI3B,IAAMT,EAAIf,OAAS,GACrBkD,EAAY9B,KAAK,CAAEP,IAAKW,EAAI,EAAGvB,MAAO,UAEpC8C,EAAOvB,GAAGrC,MAAQ4D,EAAOvB,EAAI,GAAGrC,MAAO,CAAC,IAAD,EACZ,CAAC4D,EAAOvB,EAAI,GAAIuB,EAAOvB,IAAnDuB,EAAOvB,GADiC,KAC7BuB,EAAOvB,EAAI,GADkB,KAEzC0B,EAAY9B,KAAK,CAAEP,IAAKW,EAAI,EAAGvB,MAAO,UACtCkD,EAAU,CAAC3B,EAAGA,EAAI,QAElB0B,EAAY9B,KAAK,CAAEP,IAAKW,EAAGvB,MAAO,UAEpCe,EAAWI,KACTjB,EAA+BD,EAAOgD,EAAaC,KAQzD,OAJAnC,EAAU,sBACLA,GADK,YAELK,EAAgCN,EAAIf,OAAQ,QAASE,MHtB1D,cITiB,SAACa,EAAKb,GACvB,IAAIc,EAAa,GACjBA,EAAWI,KAAKC,EAAyBN,EAAIf,OAAQ,QAASE,IAY9D,IAVA,IAAM6C,EAAM,YAAOhC,GAKfqC,EAAQ,EACRC,EAJMtC,EAAIf,OAIA,EAGVmD,GAAU,EACPA,GAAS,CACdnC,EAAWI,KACTjB,EACED,EACA,CACE,CAAEW,IAAKuC,EAAOnD,MAAO,SACrB,CAAEY,IAAKuC,EAAQ,EAAGnD,MAAO,UAE3B,OAKJkD,GAAU,EAGV,IAAK,IAAIH,EAAII,EAAOJ,EAAIK,EAAKL,IAAK,CAChC,IAAIE,EAAc,GACdzB,EAAO,KAIX,GAHIuB,IAAMK,EAAM,GACdH,EAAY9B,KAAK,CAAEP,IAAKmC,EAAI,EAAG/C,MAAO,UAEpC8C,EAAOC,GAAG7D,MAAQ4D,EAAOC,EAAI,GAAG7D,MAAO,OAEZ,CAAC4D,EAAOC,EAAI,GAAID,EAAOC,IAAnDD,EAAOC,GAFiC,KAE7BD,EAAOC,EAAI,GAFkB,KAGzCvB,EAAO,CAACuB,EAAGA,EAAI,GACfE,EAAY9B,KAAK,CAAEP,IAAKmC,EAAI,EAAG/C,MAAO,UACtCkD,GAAU,OAEVD,EAAY9B,KAAK,CAAEP,IAAKmC,EAAG/C,MAAO,UAEpCe,EAAWI,KAAKjB,EAA+BD,EAAOgD,EAAazB,IAKrE,IAAK0B,EACH,MAKFE,GAAO,EACPrC,EAAWI,KACTjB,EACED,EACA,CACE,CAAEW,IAAKwC,EAAKpD,MAAO,SACnB,CAAEY,IAAKwC,EAAM,EAAGpD,MAAO,UAEzB,OAKJ,IAAK,IAAI+C,EAAIK,EAAM,EAAGL,EAAII,EAAQ,EAAGJ,IAAK,CACxC,IAAIE,EAAc,GACdzB,EAAO,KAIX,GAHIuB,IAAMI,EAAQ,GAChBF,EAAY9B,KAAK,CAAEP,IAAKmC,EAAI,EAAG/C,MAAO,UAEpC8C,EAAOC,GAAG7D,MAAQ4D,EAAOC,EAAI,GAAG7D,MAAO,OAEZ,CAAC4D,EAAOC,EAAI,GAAID,EAAOC,IAAnDD,EAAOC,GAFiC,KAE7BD,EAAOC,EAAI,GAFkB,KAGzCvB,EAAO,CAACuB,EAAGA,EAAI,GACfG,GAAU,EACVD,EAAY9B,KAAK,CAAEP,IAAKmC,EAAG/C,MAAO,eAElCiD,EAAY9B,KAAK,CAAEP,IAAKmC,EAAI,EAAG/C,MAAO,UAExCe,EAAWI,KAAKjB,EAA+BD,EAAOgD,EAAazB,IAIrE2B,GAAS,EAOX,OALApC,EAAU,sBACLA,GADK,YAELK,EAAyBN,EAAIf,OAAQ,QAASE,IAFzC,YAGLmB,EAAgCN,EAAIf,OAAQ,QAASE,MJnF1D,aH2CgB,SAACa,EAAKb,GACtB,IAAIc,EAAa,GAOjB,OANAA,EAAWI,KAAKC,EAAyBN,EAAIf,OAAQ,QAASE,IAC9DY,EAAa,YAAIC,GAAMb,EAAOc,EAAY,EAAGD,EAAIf,OAAS,GAC1DgB,EAAU,sBACLA,GADK,YAELK,EAAgCN,EAAIf,OAAQ,QAASE,MGhD1D,aFyDgB,SAACa,EAAKb,GACtB,IAAIc,EAAa,GACjBA,EAAWI,KAAKC,EAAyBN,EAAIf,OAAQ,UACrD,IAAM+C,EAAM,YAAOhC,GAcnB,OAbAc,EAAakB,EAAQ,EAAGhC,EAAIf,OAAS,EAAGE,EAAOc,GAC/CA,EAAWI,KACTjB,EAA+BD,EAAO,CACpC,CACEW,IAAKE,EAAIf,OAAS,EAClBC,MAAO,YAIbe,EAAU,sBACLA,GADK,YAELK,EAAgCN,EAAIf,OAAQ,QAASE,MEvE1D,YDyCe,SAACa,EAAKb,GAUrB,IARA,IAAMc,EAAa,GAGb+B,EAAM,YAAOhC,GAEbuC,EAAIvC,EAAIf,OAGLgD,EAAIf,KAAKC,MAAMoB,EAAI,EAAI,GAAIN,GAAK,EAAGA,IAC1CP,EAAQM,EAAQO,EAAGN,EAAG9C,EAAOc,GAK/B,IAAK,IAAIgC,EAAIM,EAAI,EAAGN,GAAK,EAAGA,IAAK,CAAC,IAAD,EACN,CAACD,EAAOC,GAAID,EAAO,IAA3CA,EAAO,GADuB,KACnBA,EAAOC,GADY,KAE/BhC,EAAWI,KACTjB,EACED,EACA,CAAC,CAAEW,IAAK,EAAGZ,MAAO,UAClB,CAAC+C,EAAG,KAGRP,EAAQM,EAAQC,EAAG,EAAG9C,EAAOc,GAG/B,OAAOA,EAAWuC,OAChBlC,EAAgCN,EAAIf,OAAQ,QAASE,MMlF5CsD,EAAe,SAACxD,GAC3B,MAAO,CACLyD,KCJyB,gBDKzBzD,OAAQA,IAsBC0D,EAAoB,SAACxD,GAChC,MAAO,CAAEuD,KCtBuB,qBDsBevD,MAAOA,IAiBlDyD,EAAmB,SAAnBA,EAAoBC,EAAUC,EAAUC,EAASC,EAAW7D,GAChE8D,YAAW,WACLD,EAAYD,EAAQ9D,OAAS,GAAK6D,IAAWI,eAAiB/D,EAEhE0D,EAASF,MAKXE,EAASE,EAAQC,IACjBJ,EAAiBC,EAAUC,EAAUC,EAASC,EAAY,EAAG7D,MAC5DgE,EAAgBL,IAAWM,SAG1BD,EAAkB,SAACC,GACvB,OAAO,IAAMA,EAAQ,GAGVC,EAAkB,SAAClE,EAAOwB,EAAYD,EAAM4C,GACvD,MAAO,CACLZ,KC9D4B,mBD+D5BvD,MAAOA,EACPwB,WAAYA,EACZD,KAAMA,EACN4C,MAAOA,IEnCIC,EA3BS,WAAO,IAAD,EACKC,aAAY,SAACC,GAAD,MAAW,CACtDA,EAAMC,UACND,EAAME,gBAHoB,mBACrBD,EADqB,KACVC,EADU,KAKtBd,EAAWe,cAOXzF,EAAU0F,OAAOC,KAAK/B,GAE5B,OACE,6BACE,kBAAC,EAAD,mBACA,kBAAC,EAAD,CACE3D,MAAOsF,EACPvF,QAASA,EACTE,SAbyB,SAAC0F,GAC9BlB,EAASzD,KACTyD,EFPwB,SAACa,GAC3B,MAAO,CACLhB,KCZyB,gBDazBgB,UAAWA,GEIFtE,CAA4B2E,EAAMC,OAAO5F,SAY9CE,SAAUqF,MCbHM,EAZK,SAAC,GAAmC,IAAjC7F,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACtC,OACE,2BACEK,UAAWC,IAAQC,MACnB6D,KAAK,SACLtE,MAAOA,EACPC,SAAUA,EACVC,SAAUA,KCqBD4F,EAzBY,WAAO,IAAD,EACGV,aAAY,SAACC,GAAD,MAAW,CACvDA,EAAMU,YAAYlF,OAClBwE,EAAME,gBAHuB,mBAC1BS,EAD0B,KACZT,EADY,KAK/BS,EAAgC,IAAjBA,EAAqB,GAAKA,EACzC,IAAMvB,EAAWe,cAOjB,OACE,6BACE,kBAAC,EAAD,sBACA,kBAAC,EAAD,CACEtF,SAAUqF,EACVvF,MAAOgG,EACP/F,SAX4B,SAAC0F,GACjClB,EAASzD,KACTyD,EAASzD,EAA4B2E,EAAMC,OAAO5F,a,iBCLvCiG,EARA,SAAC,GAAqC,IAAnCtF,EAAkC,EAAlCA,SAAUuF,EAAwB,EAAxBA,QAAShG,EAAe,EAAfA,SACnC,OACE,4BAAQA,SAAUA,EAAUK,UAAWC,IAAQyF,OAAQC,QAASA,GAC7DvF,ICSQwF,EAVG,WAChB,IAAM1B,EAAWe,cAMjB,OAAO,kBAAC,EAAD,CAAQU,QAJY,WACzBzB,GNuBK,SAACA,EAAUC,GAEhBD,EAASF,KAET,IAAM6B,EAAMzC,EAAYe,IAAWY,WAC7BvE,EAAQ2D,IAAW2B,UACnBxE,EAAauE,EAAI1B,IAAWqB,YAAahF,GAE/C0D,EAhBK,CAAEH,KCnBwB,wBDoC/BE,EAAiBC,EAAUC,EAAU7C,EAAY,EAAGd,QM7B/C,aCLMuF,EANA,SAAC,GAAmC,IAAjCtG,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUsG,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IACtC,OACE,2BAAOD,IAAKA,EAAKC,IAAKA,EAAKxG,MAAOA,EAAOC,SAAUA,EAAUqE,KAAK,WCwBvDwB,EArBY,WACzB,IAAId,EAAQI,aAAY,SAACC,GAAD,OAAWA,EAAMoB,YACnChC,EAAWe,cAMjB,OACE,6BACE,kBAAC,EAAD,cACA,kBAAC,EAAD,CACEe,IAAI,IACJC,IAAI,MACJxG,MAAOgF,EACP/E,SAXwB,SAAC0F,GAC7BlB,ERKoB,SAACO,GACvB,MAAO,CACLV,KCjBqB,YDkBrBU,MAAOA,GQREhE,CAAwB2E,EAAMC,OAAO5F,aCInC0G,EAVI,WACjB,IAAMjC,EAAWe,cAMjB,OAAO,kBAAC,EAAD,CAAQU,QAJM,WACnBzB,EAASzD,OAGJ,cCKM2F,EAZI,WACjB,IAAMlC,EAAWe,cACX3E,EAASuE,aAAY,SAACC,GAAD,OAAWA,EAAMU,YAAYlF,UAOxD,OAAO,kBAAC,EAAD,CAAQqF,QALM,WACnBzB,EAASzD,KACTyD,EAASzD,EAA4BH,MAGhC,mBCiBM+F,EArBC,WACd,IAEMC,EAAmB,OAFXzB,aAAY,SAACC,GAAD,OAAWA,EAAMP,gBAEX,kBAAC,EAAD,MAAgB,kBAAC,EAAD,MAChD,OACE,yBAAKvE,UAAWC,IAAQoG,SACtB,wBAAIrG,UAAWC,IAAQsG,OAAvB,gCACA,yBAAKvG,UAAWC,IAAQ2E,iBACtB,kBAAC,EAAD,OAEF,yBAAK5E,UAAWC,IAAQsF,oBACtB,kBAAC,EAAD,MACA,kBAACiB,EAAD,MACA,kBAACC,EAAD,OAEF,yBAAKzG,UAAWC,IAAQsF,qBACxB,yBAAKvF,UAAWC,IAAQ2F,WAAYU,K,iBCb3BI,EAVA,SAAC,GAAmC,IAAjCjH,EAAgC,EAAhCA,MAAOkH,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KACxBC,EAAS,CACbC,gBAF8C,EAAZvG,MAGlCoG,MAAM,GAAD,OAAKA,EAAL,MACLC,KAAK,GAAD,OAAKA,EAAL,MACJG,OAAO,GAAD,OAAK,IAAMtH,EAAX,OAER,OAAO,yBAAKO,UAAWC,IAAQyG,OAAQM,MAAOH,K,iBC2BjCI,EAhCC,WACd,IAAMzB,EAAcX,aAAY,SAACC,GAAD,OAAWA,EAAMU,eAD7B,EAEkB0B,mBAASC,OAAOC,YAFlC,mBAEbC,EAFa,KAEAC,EAFA,KAGpBC,qBAAU,WACR,IAAMC,EAAsB,WAC1BF,EAAeH,OAAOC,aAGxB,OADAD,OAAOM,iBAAiB,SAAUD,GAC3B,WACLL,OAAOO,oBAAoB,SAAUF,OAIzC,IAAMG,EAAepF,KAAKC,MAAqB,GAAd6E,EAAqB7B,EAAYlF,QAC5DsH,EAAWrF,KAAKC,MAAqB,GAAd6E,GAAsB7B,EAAYlF,OAAS,IAClEuH,EACJR,GACCM,EAAenC,EAAYlF,OAASsH,GAAYpC,EAAYlF,OAAS,IAElEwH,EAAUtC,EAAY3F,KAAI,SAACkI,EAAQC,GAAT,OAC9B,kBAAC,EAAD,CACEvI,MAAOsI,EAAOtI,MACdM,IAAKiI,EACLrB,MAAOgB,EACPf,KAAMiB,EAAW,EAAID,EAAWI,GAASJ,EAAWD,GACpDpH,MAAOwH,EAAOxH,WAIlB,OAAO,yBAAKP,UAAWC,IAAQgH,SAAUa,ICrB5BG,EATH,WACV,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,eCTOC,GAAiB,SAACpD,EAAOqD,GACpC,OAAO,2BAAKrD,GAAUqD,ICElBC,GAAsB,SAAC9H,GAC3B,OAAO,YACFU,MAAMC,KAAKD,MAAMV,IAAS,iBAAO,CAClCb,MAAO8C,KAAK8F,SACZ9H,MAAO,cAKP+H,GAAe,CACnBvD,UAAW,iBACXS,YAAa4C,GAAoB,IACjC3D,MAAO,GACPqB,UAAW,EACXvB,aAAc,MAGVgE,GAAe,SAACzD,EAAO0D,GAC3B,OAAON,GAAepD,EAAO,CAAEC,UAAWyD,EAAOzD,aAG7CjB,GAAe,SAACgB,EAAO0D,GAC3B,IAAMC,EAAgBlG,KAAK0D,IAAI,EAAG1D,KAAKyD,IAAI,IAAKwC,EAAOlI,SACjDoI,EAAUN,GAAoBK,GACpC,OAAOP,GAAepD,EAAO,CAAEU,YAAakD,KAGxCC,GAAW,SAAC7D,EAAO0D,GACvB,OAAON,GAAepD,EAAO,CAAEL,MAAO+D,EAAO/D,SAGzCmE,GAAqB,SAAC9D,EAAO0D,GACjC,OAAON,GAAepD,EAAO,CAC3BP,aAAcO,EAAMgB,UACpBA,UAAWhB,EAAMgB,UAAY,KAI3B9B,GAAoB,SAACc,EAAO0D,GAChC,QAAqBK,IAAjBL,EAAOhI,OAAuBgI,EAAOhI,QAAUsE,EAAMP,aACvD,OAAOO,EAET,IAAM4D,EAAU5D,EAAMU,YAAY3F,KAAI,SAACiJ,GAAD,mBAAC,eAClCA,GADiC,IAEpCvI,MAAO,aAET,OAAO2H,GAAepD,EAAO,CAC3BP,aAAc,KACdiB,YAAakD,KAIXhE,GAAkB,SAACI,EAAO0D,GAE9B,GAAIA,EAAOhI,QAAUsE,EAAMP,aACzB,OAAOO,EAIT,IAAI4D,EAAO,YAAO5D,EAAMU,aAUxB,GAPIgD,EAAOxG,YACTwG,EAAOxG,WAAW+G,SAAQ,YAAqB,IAAlB5H,EAAiB,EAAjBA,IAAKZ,EAAY,EAAZA,MAChCmI,EAAQvH,GAAR,2BAAoBuH,EAAQvH,IAA5B,IAAkCZ,MAAOA,OAKzCiI,EAAOzG,KAAM,CAAC,IAAD,cACMyG,EAAOzG,KADb,GACRiH,EADQ,KACFC,EADE,KAEThH,EAAMyG,EAAQM,GACpBN,EAAQM,GAAQN,EAAQO,GACxBP,EAAQO,GAAQhH,EAGlB,GAAIuG,EAAO7D,MAAO,mBAGc6D,EAAO7D,MAHrB,GAGTuE,EAHS,KAGGC,EAHH,KAIZA,IAAYT,EAAQpI,OAAS,EAC/BoI,EAAO,sBACFA,EAAQU,MAAM,EAAGD,IADf,CAELT,EAAQQ,IAFH,YAGFR,EAAQU,MAAMD,EAAU,EAAGD,IAHzB,CAILR,EAAQS,KAEDD,EAAaC,IACtBT,EAAO,sBACFA,EAAQU,MAAM,EAAGD,IADf,CAELT,EAAQQ,IAFH,YAGFR,EAAQU,MAAMD,EAASD,IAHrB,YAIFR,EAAQU,MAAMF,EAAa,MAKpC,OAAOhB,GAAepD,EAAO,CAAEU,YAAakD,KAsB/BW,GAnBC,WAAmC,IAAlCvE,EAAiC,uDAAzBwD,GAAcE,EAAW,uCAChD,OAAQA,EAAOzE,MACb,IfzGyB,gBe0GvB,OAAOwE,GAAazD,EAAO0D,GAC7B,If1GyB,gBe2GvB,OAAO1E,GAAagB,EAAO0D,GAC7B,If3GqB,Ye4GnB,OAAOG,GAAS7D,EAAO0D,GACzB,IfzG+B,sBe0G7B,OAAOI,GAAmB9D,GAC5B,If1G8B,qBe2G5B,OAAOd,GAAkBc,EAAO0D,GAClC,If/G4B,mBegH1B,OAAO9D,GAAgBI,EAAO0D,GAChC,QACE,OAAO1D,IC5GPwE,GAAmBnC,OAAOoC,sCAAwCC,IAE3DC,GAAQC,YACnBL,GACAC,GAAiBK,YAAgBC,OAGnCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.22b47d69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menubar\":\"Menubar_Menubar__l6E-W\",\"Title\":\"Menubar_Title__35sdL\",\"AlgorithmPicker\":\"Menubar_AlgorithmPicker__35HbC\",\"ElementCountPicker\":\"Menubar_ElementCountPicker__2neeS\",\"RunButton\":\"Menubar_RunButton__3Esyu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1EgxS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormLabel\":\"FormLabel_FormLabel__3Si7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__juVdw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Column\":\"Column_Column__jLV4p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Columns\":\"Columns_Columns__3IKCN\"};","import React from 'react';\n\nimport classes from '../Input.module.css';\n\nconst DropdownMenu = ({ options, value, onChange, disabled }) => {\n  const dropDownOptions = options.map((option) => (\n    <option key={option}>{option}</option>\n  ));\n  return (\n    <select\n      disabled={disabled}\n      value={value}\n      className={classes.Input}\n      onChange={onChange}\n    >\n      {dropDownOptions}\n    </select>\n  );\n};\n\nexport default DropdownMenu;\n","import React from 'react';\n\nimport classes from './FormLabel.module.css';\n\nconst FormLabel = ({ children }) => {\n  return <label className={classes.FormLabel}>{children}</label>;\n};\n\nexport default FormLabel;\n","import * as actionCreators from '../store/actionCreators';\n\nexport const instantAllColor = (length, color, visId) => {\n  // create a highlight action with\n  return actionCreators.animateElements(\n    visId,\n    getIdxColorArray(length, color),\n    null\n  );\n};\n\nexport const gradualAllColor = (length, color, visId) => {\n  // create array of idx color objs\n  // map each obj to a highlight action w/ visId\n  return getIdxColorArray(length, color).map((idxColor) => {\n    return getSingleHighlightAction(idxColor, visId);\n  });\n};\n\nexport const gradualAllColorReverse = (length, color, visId) => {\n  return getIdxColorArray(length, color)\n    .reverse()\n    .map((idxColor) => {\n      return getSingleHighlightAction(idxColor, visId);\n    });\n};\n\nconst getIdxColorArray = (length, color) => {\n  // returns an array of color idx objects\n  return Array.from(Array(length), (_, idx) => ({ idx: idx, color: color }));\n};\n\nexport const getSingleHighlightAction = (idxColor, visId) => {\n  return actionCreators.animateElements(visId, [idxColor], null);\n};\n","import * as actionCreators from '../store/actionCreators';\nimport * as sortUtil from './sort-util';\n\nconst partition = (arr, visId, animations, lo, hi) => {\n  // initially it is not in the arr\n  animations.push(\n    sortUtil.getSingleHighlightAction({ idx: hi, color: 'green' }, visId)\n  );\n  let lastElSmallerThanPivot = lo - 1;\n  const pivot = arr[hi]; // pivot is last element\n  for (let j = lo; j < hi; j++) {\n    let swap = null;\n    let highlights = [];\n    highlights.push({ idx: j, color: 'black' });\n    if (arr[j].value < pivot.value) {\n      lastElSmallerThanPivot += 1;\n      // swap into new position\n      let tmp = arr[j];\n      arr[j] = arr[lastElSmallerThanPivot];\n      arr[lastElSmallerThanPivot] = tmp;\n      swap = [j, lastElSmallerThanPivot];\n    }\n    highlights.push({ idx: j + 1, color: 'green' });\n    animations.push(actionCreators.animateElements(visId, highlights, swap));\n  }\n\n  // swap pivot with element after last element smaller than pivot\n  let tmp = arr[hi];\n  arr[hi] = arr[lastElSmallerThanPivot + 1];\n  arr[lastElSmallerThanPivot + 1] = tmp;\n  animations.push(\n    actionCreators.animateElements(visId, null, [\n      hi,\n      lastElSmallerThanPivot + 1,\n    ])\n  );\n\n  // return idx of pivot\n  return lastElSmallerThanPivot + 1;\n};\n\nconst quickSortAux = (arr, visId, animations, lo, hi) => {\n  if (lo < hi) {\n    // partition\n    const pivIdx = partition(arr, visId, animations, lo, hi);\n\n    // sort each side of the partition\n    quickSortAux(arr, visId, animations, lo, pivIdx - 1);\n    quickSortAux(arr, visId, animations, pivIdx + 1, hi);\n  } else if (lo !== arr.length) {\n    animations.push(\n      sortUtil.getSingleHighlightAction({ idx: lo, color: 'green' }, visId)\n    );\n  }\n};\n\nconst quickSort = (arr, visId) => {\n  let animations = [];\n  animations.push(sortUtil.instantAllColor(arr.length, 'black', visId));\n  quickSortAux([...arr], visId, animations, 0, arr.length - 1);\n  animations = [\n    ...animations,\n    ...sortUtil.gradualAllColorReverse(arr.length, 'black', visId),\n  ];\n  return animations;\n};\n\n// const test = [\n//   { value: 4 },\n//   { value: 65 },\n//   { value: 7 },\n//   { value: 8 },\n//   { value: 3 },\n//   { value: 3 },\n//   { value: 4 },\n//   { value: 5 },\n//   { value: 6 },\n//   { value: 76 },\n//   { value: 7 },\n//   { value: 7 },\n//   { value: 56 },\n//   { value: 4 },\n//   { value: 53 },\n// ];\n\n// console.log(quickSort(test));\n\nexport default quickSort;\n","import * as actionCreators from '../store/actionCreators';\nimport * as sortUtil from './sort-util';\n\nconst merge = (arr, lIdx, mid, rIdx, visId, animations) => {\n  let initMid = mid;\n\n  // start of left sub arr\n  let lStart = lIdx;\n\n  // start of right sub arr\n  let rStart = mid + 1;\n\n  // as both halves are sorted, if this holds, no merge is needed\n  if (arr[mid].value <= arr[rStart].value) {\n    return;\n  }\n\n  while (lStart <= mid && rStart <= rIdx) {\n    animations.push(\n      actionCreators.animateElements(visId, [\n        { idx: lStart, color: 'green' },\n        { idx: rStart, color: 'green' },\n      ])\n    );\n    let highlights = [\n      { idx: lStart, color: 'black' },\n      { idx: rStart, color: 'black' },\n    ];\n\n    if (lIdx === 0 && initMid === Math.floor((arr.length - 1) / 2)) {\n      console.log('lsjdflsk');\n      highlights = null;\n    }\n\n    if (arr[lStart].value <= arr[rStart].value) {\n      animations.push(actionCreators.animateElements(visId, highlights));\n      lStart++;\n    } else {\n      let idx = rStart;\n      while (idx >= lStart + 1) {\n        // animations.push(\n        //   actionCreators.animateElements(visId, null, [idx, idx - 1])\n        // );\n        [arr[idx], arr[idx - 1]] = [arr[idx - 1], arr[idx]];\n        idx--;\n      }\n\n      animations.push(\n        actionCreators.animateElements(visId, highlights, null, [\n          rStart,\n          lStart,\n        ])\n      );\n\n      lStart++;\n      mid++;\n      rStart++;\n    }\n  }\n};\n\nconst mergeSortAux = (arr, lIdx, rIdx, visId, animations) => {\n  if (lIdx < rIdx) {\n    const mid = Math.floor(lIdx + (rIdx - lIdx) / 2);\n    mergeSortAux(arr, lIdx, mid, visId, animations);\n    mergeSortAux(arr, mid + 1, rIdx, visId, animations);\n    merge(arr, lIdx, mid, rIdx, visId, animations);\n  }\n  return arr;\n};\n\nconst mergeSort = (arr, visId) => {\n  let animations = [];\n  animations.push(sortUtil.instantAllColor(arr.length, 'black'));\n  const result = [...arr];\n  mergeSortAux(result, 0, arr.length - 1, visId, animations);\n  animations.push(\n    actionCreators.animateElements(visId, [\n      {\n        idx: arr.length - 1,\n        color: 'green',\n      },\n    ])\n  );\n  animations = [\n    ...animations,\n    ...sortUtil.gradualAllColorReverse(arr.length, 'black', visId),\n  ];\n  return animations;\n};\n\nexport default mergeSort;\n","import * as actionCreators from '../store/actionCreators';\nimport * as sortUtil from './sort-util';\n\nconst heapify = (arr, length, rootIdx, visId, animations) => {\n  // initially set largest element idx as root idx\n  let largestElIdx = rootIdx;\n\n  // find the idxs of the children nodes\n  const leftChildIdx = 2 * rootIdx + 1;\n  const rightChildIdx = 2 * rootIdx + 2;\n\n  // set largest idx to the largest of either the root node, of the left child\n  if (\n    leftChildIdx < length &&\n    arr[leftChildIdx].value > arr[largestElIdx].value\n  ) {\n    largestElIdx = leftChildIdx;\n  }\n\n  // set the largest idx to the largest of either the largest, or the right child\n  if (\n    rightChildIdx < length &&\n    arr[rightChildIdx].value > arr[largestElIdx].value\n  ) {\n    largestElIdx = rightChildIdx;\n  }\n\n  // if root isn't largest, swap largest into root and heapift the subtree\n  // that largest is in\n  // this allows the out of place node to propogate down\n  if (largestElIdx !== rootIdx) {\n    [arr[rootIdx], arr[largestElIdx]] = [arr[largestElIdx], arr[rootIdx]];\n    animations.push(\n      actionCreators.animateElements(\n        visId,\n        [\n          { idx: rootIdx, color: 'green' },\n          { idx: largestElIdx, color: 'green' },\n        ],\n        [rootIdx, largestElIdx]\n      )\n    );\n    animations.push(\n      actionCreators.animateElements(visId, [{ idx: rootIdx, color: 'black' }])\n    );\n    heapify(arr, length, largestElIdx, visId, animations);\n  } else {\n    animations.push(\n      actionCreators.animateElements(visId, [{ idx: rootIdx, color: 'green' }])\n    );\n    animations.push(\n      actionCreators.animateElements(visId, [{ idx: rootIdx, color: 'black' }])\n    );\n  }\n};\n\nconst heapSort = (arr, visId) => {\n  // create animations arr\n  const animations = [];\n\n  // copy the arr so we don't alter it directly\n  const result = [...arr];\n\n  const n = arr.length;\n\n  // construct heap\n  for (let i = Math.floor(n / 2 - 1); i >= 0; i--) {\n    heapify(result, n, i, visId, animations);\n  }\n\n  // extract max and put at end of the list\n  // then heapify to maintain the heap\n  for (let i = n - 1; i >= 0; i--) {\n    [result[0], result[i]] = [result[i], result[0]];\n    animations.push(\n      actionCreators.animateElements(\n        visId,\n        [{ idx: 0, color: 'green' }],\n        [i, 0]\n      )\n    );\n    heapify(result, i, 0, visId, animations);\n  }\n\n  return animations.concat(\n    sortUtil.gradualAllColorReverse(arr.length, 'black', visId)\n  );\n};\n\nexport default heapSort;\n","import selectionSort from './selection-sort';\nimport insertionSort from './insertion-sort';\nimport bubbleSort from './bubble-sort';\nimport shakerSort from './shaker-sort';\nimport quickSort from './quick-sort';\nimport mergeSort from './merge-sort';\nimport heapSort from './heap-sort';\n\nconst sortingAlgs = {\n  'selection-sort': selectionSort,\n  'insertion-sort': insertionSort,\n  'bubble-sort': bubbleSort,\n  'shaker-sort': shakerSort,\n  'quick-sort': quickSort,\n  'merge-sort': mergeSort,\n  'heap-sort': heapSort,\n};\n\nexport default sortingAlgs;\n","import * as actionCreators from '../store/actionCreators';\nimport * as sortUtil from './sort-util';\n\nconst selectionSort = (arr, visId) => {\n  const result = [...arr];\n  let animations = [];\n  animations.push(sortUtil.instantAllColor(arr.length, 'black', visId));\n  for (let i = 0; i < result.length; i++) {\n    let minIdx = i;\n    animations.push(\n      sortUtil.getSingleHighlightAction({ idx: i, color: 'green' }, visId)\n    );\n    for (let j = i + 1; j < result.length; j++) {\n      let highlights = [];\n      if (j - 1 !== minIdx) {\n        highlights.push({ idx: j - 1, color: 'black' });\n      }\n      highlights.push({ idx: j, color: 'green' });\n      if (result[j].value < result[minIdx].value) {\n        if (minIdx !== i) {\n          highlights.push({ idx: minIdx, color: 'black' });\n        }\n        minIdx = j;\n        highlights.push({ idx: minIdx, color: 'green' });\n      }\n      animations.push(actionCreators.animateElements(visId, highlights, null));\n    }\n    // swap elements we are swapping\n    let highlights = [];\n    if (i !== arr.length - 1 && minIdx !== arr.length) {\n      highlights.push({ idx: arr.length - 1, color: 'black' });\n    }\n    if (minIdx !== i) {\n      highlights.push({ idx: minIdx, color: 'green' });\n      highlights.push({ idx: i, color: 'black' });\n    }\n    animations.push(\n      actionCreators.animateElements(visId, highlights, [i, minIdx])\n    );\n    [result[minIdx], result[i]] = [result[i], result[minIdx]];\n    // color the swapped elements black, as we are done with them for now\n  }\n  animations = [\n    ...animations,\n    ...sortUtil.gradualAllColorReverse(arr.length, 'black', visId),\n  ];\n  return animations;\n  // return result;\n};\n\n// const test = [{ value: 3 }, { value: 2 }, { value: 1 }, { value: 4 }];\n// console.log(selectionSort(test));\n\nexport default selectionSort;\n","import * as actionCreators from '../store/actionCreators';\nimport * as sortUtil from './sort-util';\n\nconst insertionSort = (arr, visId) => {\n  let animations = [];\n  animations.push(sortUtil.instantAllColor(arr.length, 'black', visId));\n  const result = [...arr];\n  for (let i = 0; i < arr.length; i++) {\n    let j = i - 1;\n    animations.push(\n      actionCreators.animateElements(\n        visId,\n        [\n          { idx: i, color: 'green' },\n          { idx: i - 1, color: 'green' },\n        ],\n        null\n      )\n    );\n\n    while (j >= 0 && result[j + 1].value < result[j].value) {\n      let tmp = result[j];\n      result[j] = result[j + 1];\n      result[j + 1] = tmp;\n      let highlights = [];\n      highlights.push({ idx: j, color: 'black' });\n      highlights.push({ idx: j - 1, color: 'green' });\n      animations.push(\n        actionCreators.animateElements(visId, highlights, [j, j + 1])\n      );\n      j -= 1;\n    }\n    if (j === i - 1) {\n      animations.push(\n        actionCreators.animateElements(\n          visId,\n          [\n            { idx: i, color: 'black' },\n            { idx: i - 1, color: 'black' },\n          ],\n          null\n        )\n      );\n    } else {\n      animations.push(\n        sortUtil.getSingleHighlightAction({ idx: j + 1, color: 'black' }, visId)\n      );\n      animations.push(\n        actionCreators.animateElements(\n          visId,\n          [\n            { idx: j + 1, color: 'black' },\n            { idx: j, color: 'black' },\n          ],\n          null\n        )\n      );\n    }\n  }\n  animations = [\n    ...animations,\n    ...sortUtil.gradualAllColor(arr.length, 'green', visId),\n    ...sortUtil.gradualAllColorReverse(arr.length, 'black', visId),\n  ];\n  return animations;\n};\n\n// const test = [\n//   { value: 4 },\n//   { value: 65 },\n//   { value: 7 },\n//   { value: 8 },\n//   { value: 3 },\n//   { value: 3 },\n//   { value: 4 },\n//   { value: 5 },\n//   { value: 6 },\n//   { value: 76 },\n//   { value: 7 },\n//   { value: 7 },\n//   { value: 56 },\n//   { value: 4 },\n//   { value: 53 },\n// ];\n\n// console.log(insertionSort(test));\n\nexport default insertionSort;\n","import * as actionCreators from '../store/actionCreators';\nimport * as sortUtil from './sort-util';\n\nconst bubbleSort = (arr, visId) => {\n  let animations = [];\n  animations.push(sortUtil.instantAllColor(arr.length, 'black', visId));\n  const result = [...arr];\n  for (let i = 0; i < arr.length - 1; i++) {\n    animations.push(\n      actionCreators.animateElements(visId, [\n        { idx: 0, color: 'green' },\n        { idx: 1, color: 'green' },\n      ])\n    );\n    for (let j = 0; j < arr.length - 1 - i; j++) {\n      let highlighted = [];\n      let swapped = null;\n      if (j !== arr.length - 2) {\n        highlighted.push({ idx: j + 2, color: 'green' });\n      }\n      if (result[j].value > result[j + 1].value) {\n        [result[j], result[j + 1]] = [result[j + 1], result[j]];\n        highlighted.push({ idx: j + 1, color: 'black' });\n        swapped = [j, j + 1];\n      } else {\n        highlighted.push({ idx: j, color: 'black' });\n      }\n      animations.push(\n        actionCreators.animateElements(visId, highlighted, swapped)\n      );\n    }\n  }\n  animations = [\n    ...animations,\n    ...sortUtil.gradualAllColorReverse(arr.length, 'black', visId),\n  ];\n  return animations;\n};\n\n// for (let i = 0; i < 1000; i++) {\n//   let test = [...Array.from(Array(1000), () => getRandomInt(0, 10))];\n//   const bubbleSorted = bubbleSort(test);\n//   const jsSorted = test.sort((a, b) => a - b);\n//   let equal = true;\n//   for (let j = 0; j < test.length; j++) {\n//     equal = bubbleSorted[j] === jsSorted[j] && equal;\n//   }\n//   console.log(equal);\n// }\n\n// const test = [1, 2, 4, 5, 6, 6, 7, 7, 8, 8, 6];\n\n// // console.log(bubbleSort(test));\n\n// function getRandomInt(min, max) {\n//   min = Math.ceil(min);\n//   max = Math.floor(max);\n//   return Math.floor(Math.random() * (max - min + 1)) + min;\n// }\n\nexport default bubbleSort;\n","import * as actionCreators from '../store/actionCreators';\nimport * as sortUtil from './sort-util';\n\nconst shakerSort = (arr, visId) => {\n  let animations = [];\n  animations.push(sortUtil.instantAllColor(arr.length, 'black', visId));\n\n  const result = [...arr];\n\n  const n = arr.length;\n\n  // these tell us what elements could be in the wrong place\n  let start = 0;\n  let end = n - 1;\n\n  // tells us if a swap occured in prev iter\n  let swapped = true;\n  while (swapped) {\n    animations.push(\n      actionCreators.animateElements(\n        visId,\n        [\n          { idx: start, color: 'green' },\n          { idx: start + 1, color: 'green' },\n        ],\n        null\n      )\n    );\n    // initially set to false\n    // if swap occurs, we will swap back\n    swapped = false;\n\n    // do a normal bubble iteration\n    for (let i = start; i < end; i++) {\n      let highlighted = [];\n      let swap = null;\n      if (i !== end - 1) {\n        highlighted.push({ idx: i + 2, color: 'green' });\n      }\n      if (result[i].value > result[i + 1].value) {\n        // if in wrong order, swap\n        [result[i], result[i + 1]] = [result[i + 1], result[i]];\n        swap = [i, i + 1];\n        highlighted.push({ idx: i + 1, color: 'black' });\n        swapped = true;\n      } else {\n        highlighted.push({ idx: i, color: 'black' });\n      }\n      animations.push(actionCreators.animateElements(visId, highlighted, swap));\n    }\n\n    // if no swap occured in the first iter, the list is sorted\n    // we break to end the while loop, and therefore the alg\n    if (!swapped) {\n      break;\n    }\n\n    // we now know that the the element in index end is now sorted\n    // so we forget about it by decrementing end\n    end -= 1;\n    animations.push(\n      actionCreators.animateElements(\n        visId,\n        [\n          { idx: end, color: 'green' },\n          { idx: end - 1, color: 'green' },\n        ],\n        null\n      )\n    );\n\n    // do a reverse bubble iter\n    for (let i = end - 1; i > start - 1; i--) {\n      let highlighted = [];\n      let swap = null;\n      if (i !== start + 1) {\n        highlighted.push({ idx: i - 1, color: 'green' });\n      }\n      if (result[i].value > result[i + 1].value) {\n        // if in wrong order, swap\n        [result[i], result[i + 1]] = [result[i + 1], result[i]];\n        swap = [i, i + 1];\n        swapped = true;\n        highlighted.push({ idx: i, color: 'black' });\n      } else {\n        highlighted.push({ idx: i + 1, color: 'black' });\n      }\n      animations.push(actionCreators.animateElements(visId, highlighted, swap));\n    }\n\n    // same as before, but with start now as the bubble iter was reversed\n    start += 1;\n  }\n  animations = [\n    ...animations,\n    ...sortUtil.gradualAllColor(arr.length, 'green', visId),\n    ...sortUtil.gradualAllColorReverse(arr.length, 'black', visId),\n  ];\n  return animations;\n};\n\n// const test = [\n//   { value: 4 },\n//   { value: 65 },\n//   { value: 7 },\n//   { value: 8 },\n//   { value: 3 },\n//   { value: 3 },\n//   { value: 4 },\n//   { value: 5 },\n//   { value: 6 },\n//   { value: 76 },\n//   { value: 7 },\n//   { value: 7 },\n//   { value: 56 },\n//   { value: 4 },\n//   { value: 53 },\n// ];\n\n// console.log(shakerSort(test));\n\nexport default shakerSort;\n","import * as actionTypes from './actionTypes';\nimport sortingAlgs from '../sorting-algs/sorting-main';\n\nexport const generateList = (length) => {\n  return {\n    type: actionTypes.GENERATE_LIST,\n    length: length,\n  };\n};\n\nexport const setAlgorithm = (algorithm) => {\n  return {\n    type: actionTypes.SET_ALGORITHM,\n    algorithm: algorithm,\n  };\n};\n\nexport const setSpeed = (speed) => {\n  return {\n    type: actionTypes.SET_SPEED,\n    speed: speed,\n  };\n};\n\nexport const startVisualisation = () => {\n  return { type: actionTypes.START_VISUALISATION };\n};\n\nexport const stopVisualisation = (visId) => {\n  return { type: actionTypes.STOP_VISUALISATION, visId: visId };\n};\n\nexport const visualise = () => {\n  return (dispatch, getState) => {\n    // stop any current visualisations\n    dispatch(stopVisualisation());\n    // get alg, visId, and animations from alg\n    const alg = sortingAlgs[getState().algorithm];\n    const visId = getState().nextVisId;\n    const animations = alg(getState().currentList, visId);\n    // start visualisation\n    dispatch(startVisualisation());\n    recursiveTimeout(dispatch, getState, animations, 0, visId);\n  };\n};\n\nconst recursiveTimeout = (dispatch, getState, actions, actionIdx, visId) => {\n  setTimeout(() => {\n    if (actionIdx > actions.length - 1 || getState().currentVisId !== visId) {\n      // if visualisation has ended, or at end of animation sequence, end the visualisation\n      dispatch(stopVisualisation());\n      return;\n    }\n    // console.log(actions[actionIdx].highlights, actions[actionIdx].swap);\n    // do the animation\n    dispatch(actions[actionIdx]);\n    recursiveTimeout(dispatch, getState, actions, actionIdx + 1, visId);\n  }, speedToInterval(getState().speed)); // continually update the interval\n};\n\nconst speedToInterval = (speed) => {\n  return 100 - speed + 4; // max interval of 4ms on modern browsers\n};\n\nexport const animateElements = (visId, highlights, swap, shift) => {\n  return {\n    type: actionTypes.ANIMATE_ELEMENTS,\n    visId: visId,\n    highlights: highlights,\n    swap: swap,\n    shift: shift,\n  };\n};\n","export const SET_ALGORITHM = 'SET_ALGORITHM';\nexport const GENERATE_LIST = 'GENERATE_LIST';\nexport const SET_SPEED = 'SET_SPEED';\n\nexport const ANIMATE_ELEMENTS = 'ANIMATE_ELEMENTS';\n\nexport const START_VISUALISATION = 'START_VISUALISATION';\nexport const STOP_VISUALISATION = 'STOP_VISUALISATION';\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport DropdownMenu from '../../inputs/DropdownMenu/DropdownMenu';\nimport FormLabel from '../../inputs/FormLabel/FormLabel';\nimport * as actionCreators from '../../../store/actionCreators';\nimport sortingAlgs from '../../../sorting-algs/sorting-main';\n\nconst AlgorithmPicker = () => {\n  const [algorithm, visualising] = useSelector((state) => [\n    state.algorithm,\n    state.visualising,\n  ]);\n  const dispatch = useDispatch();\n\n  const algorithmChangeHandler = (event) => {\n    dispatch(actionCreators.stopVisualisation());\n    dispatch(actionCreators.setAlgorithm(event.target.value));\n  };\n\n  const options = Object.keys(sortingAlgs);\n\n  return (\n    <div>\n      <FormLabel>Algorithms</FormLabel>\n      <DropdownMenu\n        value={algorithm}\n        options={options}\n        onChange={algorithmChangeHandler}\n        disabled={visualising}\n      />\n    </div>\n  );\n};\n\nexport default AlgorithmPicker;\n","import React from 'react';\n\nimport classes from '../Input.module.css';\n\nconst NumberInput = ({ value, onChange, disabled }) => {\n  return (\n    <input\n      className={classes.Input}\n      type='number'\n      value={value}\n      onChange={onChange}\n      disabled={disabled}\n    ></input>\n  );\n};\n\nexport default NumberInput;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport FormLabel from '../../inputs/FormLabel/FormLabel';\nimport NumberInput from '../../inputs/NumberInput/NumberInput';\nimport * as actionCreators from '../../../store/actionCreators';\n\nconst ElementCountPicker = () => {\n  let [elementCount, visualising] = useSelector((state) => [\n    state.currentList.length,\n    state.visualising,\n  ]);\n  elementCount = elementCount === 0 ? '' : elementCount;\n  const dispatch = useDispatch();\n\n  const elementCountChangeHandler = (event) => {\n    dispatch(actionCreators.stopVisualisation());\n    dispatch(actionCreators.generateList(event.target.value));\n  };\n\n  return (\n    <div>\n      <FormLabel>Element Count</FormLabel>\n      <NumberInput\n        disabled={visualising}\n        value={elementCount}\n        onChange={elementCountChangeHandler}\n      />\n    </div>\n  );\n};\n\nexport default ElementCountPicker;\n","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = ({ children, onClick, disabled }) => {\n  return (\n    <button disabled={disabled} className={classes.Button} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Button from '../../inputs/Button/Button';\nimport * as actionCreators from '../../../store/actionCreators';\n\nconst RunButton = () => {\n  const dispatch = useDispatch();\n\n  const buttonPressHandler = () => {\n    dispatch(actionCreators.visualise());\n  };\n\n  return <Button onClick={buttonPressHandler}>RUN SORT</Button>;\n};\n\nexport default RunButton;\n","import React from 'react';\n\nconst Slider = ({ value, onChange, min, max }) => {\n  return (\n    <input min={min} max={max} value={value} onChange={onChange} type='range' />\n  );\n};\n\nexport default Slider;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport FormLabel from '../../inputs/FormLabel/FormLabel';\nimport Slider from '../../inputs/Slider/Slider';\nimport * as actionCreators from '../../../store/actionCreators';\n\nconst ElementCountPicker = () => {\n  let speed = useSelector((state) => state.interval);\n  const dispatch = useDispatch();\n\n  const intervalChangeHandler = (event) => {\n    dispatch(actionCreators.setSpeed(event.target.value));\n  };\n\n  return (\n    <div>\n      <FormLabel>Speed</FormLabel>\n      <Slider\n        min='0'\n        max='100'\n        value={speed}\n        onChange={intervalChangeHandler}\n      />\n    </div>\n  );\n};\n\nexport default ElementCountPicker;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as actionCreators from '../../../store/actionCreators';\nimport Button from '../../inputs/Button/Button';\n\nconst StopButton = () => {\n  const dispatch = useDispatch();\n\n  const clickHandler = () => {\n    dispatch(actionCreators.stopVisualisation());\n  };\n\n  return <Button onClick={clickHandler}>STOP SORT</Button>;\n};\n\nexport default StopButton;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Button from '../../inputs/Button/Button';\nimport * as actionCreators from '../../../store/actionCreators';\n\nconst RandomList = () => {\n  const dispatch = useDispatch();\n  const length = useSelector((state) => state.currentList.length);\n\n  const clickHandler = () => {\n    dispatch(actionCreators.stopVisualisation());\n    dispatch(actionCreators.generateList(length));\n  };\n\n  return <Button onClick={clickHandler}>RANDOMISE LIST</Button>;\n};\n\nexport default RandomList;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport classes from './Menubar.module.css';\nimport AlgorithmPicker from './AlgorithmPicker/AlgorithmPicker';\nimport ElementCountPicker from './ElementCountPicker/ElementCountPicker';\nimport RunButton from './RunButton/RunButton';\nimport SpeedPicker from './SpeedPicker/SpeedPicker';\nimport StopButton from './StopButton/StopButton';\nimport RandomiseList from './RandomiseList/RandomiseList';\n\nconst Menubar = () => {\n  const visId = useSelector((state) => state.currentVisId);\n\n  const button = visId === null ? <RunButton /> : <StopButton />;\n  return (\n    <div className={classes.Menubar}>\n      <h1 className={classes.Title}>Sorting Algorithm Visualiser</h1>\n      <div className={classes.AlgorithmPicker}>\n        <AlgorithmPicker />\n      </div>\n      <div className={classes.ElementCountPicker}>\n        <ElementCountPicker />\n        <RandomiseList />\n        <SpeedPicker />\n      </div>\n      <div className={classes.ElementCountPicker}></div>\n      <div className={classes.RunButton}>{button}</div>\n    </div>\n  );\n};\n\nexport default Menubar;\n","import React from 'react';\n\nimport classes from './Column.module.css';\n\nconst Column = ({ value, width, left, color }) => {\n  const styles = {\n    backgroundColor: color,\n    width: `${width}px`,\n    left: `${left}px`,\n    height: `${500 * value}px`,\n  };\n  return <div className={classes.Column} style={styles}></div>;\n};\n\nexport default Column;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Column from './Column/Column';\nimport classes from './Columns.module.css';\n\nconst Columns = () => {\n  const currentList = useSelector((state) => state.currentList);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    const windowResizeHandler = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', windowResizeHandler);\n    return () => {\n      window.removeEventListener('resize', windowResizeHandler);\n    };\n  });\n\n  const elementWidth = Math.floor((windowWidth * 0.8) / currentList.length);\n  const gapWidth = Math.floor((windowWidth * 0.2) / (currentList.length + 1));\n  const residual =\n    windowWidth -\n    (elementWidth * currentList.length + gapWidth * (currentList.length + 1));\n\n  const columns = currentList.map((column, index) => (\n    <Column\n      value={column.value}\n      key={index}\n      width={elementWidth}\n      left={residual / 2 + gapWidth + index * (gapWidth + elementWidth)}\n      color={column.color}\n    />\n  ));\n\n  return <div className={classes.Columns}>{columns}</div>;\n};\n\nexport default Columns;\n","import React from 'react';\n\nimport Menubar from './components/Menubar/Menubar';\nimport Columns from './components/Columns/Columns';\n\nconst App = () => {\n  return (\n    <>\n      <Menubar />\n      <Columns />\n    </>\n  );\n};\n\nexport default App;\n","export const objectCombiner = (state, changedObject) => {\n  return { ...state, ...changedObject };\n};\n","import * as actionTypes from './actionTypes';\nimport { objectCombiner } from './objectCombiner';\n\nconst randomListGenerator = (length) => {\n  return [\n    ...Array.from(Array(length), () => ({\n      value: Math.random(),\n      color: 'black',\n    })),\n  ];\n};\n\nconst initialState = {\n  algorithm: 'selection-sort',\n  currentList: randomListGenerator(20),\n  speed: 50,\n  nextVisId: 0,\n  currentVisId: null,\n};\n\nconst setAlgorithm = (state, action) => {\n  return objectCombiner(state, { algorithm: action.algorithm });\n};\n\nconst generateList = (state, action) => {\n  const newListLength = Math.max(0, Math.min(200, action.length));\n  const newList = randomListGenerator(newListLength);\n  return objectCombiner(state, { currentList: newList });\n};\n\nconst setSpeed = (state, action) => {\n  return objectCombiner(state, { speed: action.speed });\n};\n\nconst startVisualisation = (state, action) => {\n  return objectCombiner(state, {\n    currentVisId: state.nextVisId,\n    nextVisId: state.nextVisId + 1,\n  });\n};\n\nconst stopVisualisation = (state, action) => {\n  if (action.visId !== undefined && action.visId !== state.currentVisId) {\n    return state;\n  }\n  const newList = state.currentList.map((item) => ({\n    ...item,\n    color: 'black',\n  }));\n  return objectCombiner(state, {\n    currentVisId: null,\n    currentList: newList,\n  });\n};\n\nconst animateElements = (state, action) => {\n  // check valid animation\n  if (action.visId !== state.currentVisId) {\n    return state;\n  }\n  // action: {type: ANIMATE_ELEMENTS, visId: 5, highlights: [{idx: 1, color: 'green'}], swap: [0, 4]}\n  // copy list\n  let newList = [...state.currentList];\n\n  // change all colors in highlight list\n  if (action.highlights) {\n    action.highlights.forEach(({ idx, color }) => {\n      newList[idx] = { ...newList[idx], color: color };\n    });\n  }\n\n  // swap elements\n  if (action.swap) {\n    const [idx1, idx2] = action.swap;\n    const tmp = newList[idx1];\n    newList[idx1] = newList[idx2];\n    newList[idx2] = tmp;\n  }\n\n  if (action.shift) {\n    // shift[0] = idx of el we are moving\n    // shift[1] = idx we are moving el to\n    const [currentIdx, destIdx] = action.shift;\n    if (destIdx === newList.length - 1) {\n      newList = [\n        ...newList.slice(0, destIdx),\n        newList[currentIdx],\n        ...newList.slice(destIdx + 1, currentIdx),\n        newList[destIdx],\n      ];\n    } else if (currentIdx > destIdx) {\n      newList = [\n        ...newList.slice(0, destIdx),\n        newList[currentIdx],\n        ...newList.slice(destIdx, currentIdx),\n        ...newList.slice(currentIdx + 1),\n      ];\n    }\n  }\n\n  return objectCombiner(state, { currentList: newList });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_ALGORITHM:\n      return setAlgorithm(state, action);\n    case actionTypes.GENERATE_LIST:\n      return generateList(state, action);\n    case actionTypes.SET_SPEED:\n      return setSpeed(state, action);\n    case actionTypes.START_VISUALISATION:\n      return startVisualisation(state, action);\n    case actionTypes.STOP_VISUALISATION:\n      return stopVisualisation(state, action);\n    case actionTypes.ANIMATE_ELEMENTS:\n      return animateElements(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport App from './App.js';\nimport './index.css';\nimport reducer from './store/reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}